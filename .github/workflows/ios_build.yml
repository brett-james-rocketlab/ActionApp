name: IOS Build

on:
  workflow_dispatch:
  release:
    types: [published] # only run the workflow when a new release has been published

jobs:
  ios-build:
    name: IOS Production Build
    #runs-on: [macOS, self-hosted]
    runs-on: [self-hosted]
    defaults:
      run:
        working-directory: ios

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore node_modules from cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile --network-timeout 300000

      - name: Setup Ruby (bundle)
        uses: ruby/setup-ruby@v1
        with:
        # was 2.6
          ruby-version: 2.7.4 # This is the version that react native requests, visible in Gemfile
          bundler-cache: true

      - name: Restore Pods cache
        uses: actions/cache@v2
        with:
          path: |
            ios/Pods
            ~/Library/Caches/CocoaPods
            ~/.cocoapods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Build iOS App Ad hoc
      - uses: sparkfabrik/ios-build-action@v2.0.0
        with:
          upload-to-testflight: false # ✔️
          increment-build-number: false # ✔️
          build-pods: true # ✔️
          pods-path: 'ios/Podfile' # ✔️
          configuration: Release # ✔️
          export-method: ad-hoc # ✔️ 
          # workspace-path: ${{ secrets.WORKSPACE_PATH }}
          workspace-path: 'ios/ActionApp.xcworkspace'  # ✔️ 
          # project-path: ${{ secrets.PROJECT_PATH }}
          project-path: 'ios/ActionApp.xcodeproj' # ✔️ 
          scheme: ActionApp # ✔️ 
          output-path: build-${{ github.sha }}.ipa # ? 
          apple-key-id: ${{ secrets.APPLE_KEY_ID }} 
          apple-key-issuer-id: ${{ secrets.APPLE_KEY_ISSUER_ID }}
          apple-key-content: ${{ secrets.APPLE_KEY_CONTENT }}
          team-id: ${{ secrets.TEAM_ID }} # ✔️ 
          # team-name: ${{ secrets.TEAM_NAME }}
          team-name: 'Rocket Lab Pty Ltd' 
          match-password: ${{ secrets.MATCH_PASSWORD }}
          match-git-url: ${{ secrets.MATCH_GIT_URL }}
          match-git-basic-authorization: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }} # https://github.com/sparkfabrik/ios-build-action#match-git-basic-authorization
          match-build-type: 'adhoc' # appstore, adhoc, enterprise or development
          # browserstack-upload: true
          # browserstack-username: ${{ secrets.BROWSERSTACK_USERNAME }}
          # browserstack-access-key: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}

# Older version, may still be made to work! was having cert trouble.
#       - name: Install Pods
#         #run: cd ios && pod install --repo-update && cd ..
#         run: pod install --repo-update && cd ..

#       - name: Build IOS App
#         uses: yukiarrr/ios-build-action@v1.4.0
#         with:
#           project-path: ios/ActionApp.xcodeproj
#           p12-base64: ${{ secrets.IOS_P12_BASE64 }}
#           mobileprovision-base64: ${{ secrets.IOS_MOBILE_PROVISION_BASE64 }}
#           code-signing-identity: 'adhoc actionapp'
#           team-id: ${{ secrets.IOS_TEAM_ID }}
#           export-method: 'ad-hoc'          
#           certificate-password: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
#           workspace-path: ios/ActionApp.xcworkspace
#           scheme: ActionApp

#       - name: Upload ipa to Slack
#         run: 'echo testing a file > message.txt'
#       - uses: MeilCli/slack-upload-file@v2
#         with:
#           slack_token: ${{ secrets.SLACK_TOKEN }}
#           channels: '#automation'
# #           android/app/build/outputs/apk/release/app-release-signed.apk
#           file_path: 'output.ipa'
#           file_type: 'ipa'
#           initial_comment: 'post by slack-upload-file'

#      - name: 'Upload app to TestFlight'
#        uses: apple-actions/upload-testflight-build@v1
#        with:
#          app-path: 'output.ipa'
#          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
#          api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
#          api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
